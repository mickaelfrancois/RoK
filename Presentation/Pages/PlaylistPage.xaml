<?xml version="1.0" encoding="utf-8"?>
<Page
    x:Class="Rok.Pages.PlaylistPage"
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:local="using:Rok.Pages"
    xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
    xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
    xmlns:common="using:Rok.Commons" 
    xmlns:track="using:Rok.Logic.ViewModels.Tracks"
    x:Name="playlistPage"    
    mc:Ignorable="d">

    <Grid>
        <Grid.RowDefinitions>
            <RowDefinition x:Name="headerRow"
                           Height="{ThemeResource headerRowHeight}" />
            <RowDefinition Height="*" />
        </Grid.RowDefinitions>

        <Grid>
            <Grid.Background>
                <SolidColorBrush Color="{ThemeResource CardBackgroundFillColorDefault}"
                                 Opacity="{StaticResource headerBackgroundOpacity}" />
            </Grid.Background>

            <Grid.ColumnDefinitions>
                <ColumnDefinition x:Name="pictureColumn"
                                  Width="{ThemeResource headerPictureColumnWidth}" />
                <ColumnDefinition Width="*" />
            </Grid.ColumnDefinitions>

            <Image x:Name="backdrop"
                   Source="{x:Bind ViewModel.Backdrop,Mode=OneWay}"
                   Style="{StaticResource headerBackdrop}"
                   Grid.ColumnSpan="2" />

            <Grid Style="{StaticResource headerPictureGrid}">
                <common:PictureControl x:Name="artistPicture"
                                       Cover="{x:Bind ViewModel.Picture, Mode=OneWay}"
                                       Style="{StaticResource headerPicture}" />
            </Grid>

            <RelativePanel Grid.Column="1"
                           Margin="6,0,0,6">
              
                    <common:InlineEditableText Text="{x:Bind ViewModel.Name, Mode=TwoWay}"
                                               TextStyle="{StaticResource HeaderStyle}" />

                    <CommandBar RelativePanel.AlignBottomWithPanel="True"
                            Style="{StaticResource headerCommandBar}">

                        <AppBarButton x:Uid="playlistListen"
                                      Style="{StaticResource listenAppBarButtonStyle}"
                                      Command="{x:Bind ViewModel.ListenCommand}" />

                        <AppBarButton x:Uid="playlistDelete"
                                      Style="{StaticResource AppBarButtonCompactStyle}"
                                      Icon="Delete"
                                      Click="DeleteButton_Click" />
                    </CommandBar>
 
            </RelativePanel>
        </Grid>

        <!-- Tracks -->
        <Grid Grid.Row="1"
              Style="{StaticResource gridList}">
            
            <Grid.RowDefinitions>
                <RowDefinition Height="{ThemeResource gridHeaderTracksHeight}" />
                <RowDefinition />
            </Grid.RowDefinitions>

            <Grid Style="{StaticResource gridTracks}">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="{ThemeResource gridHeaderTracksTitleColumnWidth}"
                                      x:Name="trackTitle" />
                    <ColumnDefinition Width="{ThemeResource gridHeaderTracksArtistColumnWidth}"
                                      x:Name="trackArtist" />
                    <ColumnDefinition Width="{ThemeResource gridHeaderTracksAlbumColumnWidth}"
                                      x:Name="trackAlbum" />
                    <ColumnDefinition Width="{ThemeResource gridHeaderTracksScoreColumnWidth}"
                                      x:Name="trackScore" />
                </Grid.ColumnDefinitions>

                <TextBlock x:Uid="gridHeaderTitle"
                           Grid.Column="0"
                           Style="{StaticResource gridHeaderTracksText}" />
                <TextBlock x:Uid="gridHeaderArtist"
                           Grid.Column="1"
                           Style="{StaticResource gridHeaderTracksText}" />
                <TextBlock x:Uid="gridHeaderAlbum"
                           Grid.Column="2"
                           Style="{StaticResource gridHeaderTracksText}" />
                <TextBlock x:Uid="gridHeaderScore"
                           Grid.Column="3"
                           Style="{StaticResource gridHeaderTracksText}" />
            </Grid>

            <common:ListViewExtended x:Name="tracksList"
                                     Grid.Row="1"
                                     Margin="6,12,0,0"
                                     ItemsSource="{x:Bind ViewModel.Tracks}"    
                                     IsItemClickEnabled="True">

                <ListView.ItemTemplate>
                    <DataTemplate x:DataType="track:TrackViewModel">
                        <Grid HorizontalAlignment="Stretch"
                              Background="Transparent"
                              Margin="0,0,20,10">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="{ThemeResource gridHeaderTracksTitleColumnWidth}" />
                                <ColumnDefinition Width="{ThemeResource gridHeaderTracksArtistColumnWidth}" />
                                <ColumnDefinition Width="{ThemeResource gridHeaderTracksAlbumColumnWidth}" />
                                <ColumnDefinition Width="{ThemeResource gridHeaderTracksScoreColumnWidth}" />
                            </Grid.ColumnDefinitions>

                            <Grid.ContextFlyout>
                                <MenuFlyout ShowMode="TransientWithDismissOnPointerMoveAway">
                                    <MenuFlyoutItem x:Uid="trackFlyoutRemoveFromPlaylist"
                                                    Command="{Binding ViewModel.RemoveFromPlaylistCommand, ElementName=playlistPage}"
                                                    CommandParameter="{x:Bind Track.Id}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="&#xECC9;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem x:Uid="trackFlyoutArtist"
                                                    Icon="People"
                                                    Command="{x:Bind ArtistOpenCommand}" />
                                    <MenuFlyoutItem x:Uid="trackFlyoutAlbum"
                                                    Command="{x:Bind AlbumOpenCommand}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="&#xE93C;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                    <MenuFlyoutSeparator />
                                    <MenuFlyoutItem x:Uid="trackFlyoutLyrics"
                                                    Command="{x:Bind LyricsOpenCommand}"
                                                    Visibility="{x:Bind LyricsExists, Converter={StaticResource BoolToVisibilityConverter}}">
                                        <MenuFlyoutItem.Icon>
                                            <FontIcon Glyph="&#xE90B;" />
                                        </MenuFlyoutItem.Icon>
                                    </MenuFlyoutItem>
                                </MenuFlyout>
                            </Grid.ContextFlyout>

                            <StackPanel Grid.Column="0"
                                        Orientation="Horizontal">
                                <HyperlinkButton Style="{StaticResource gridTracksTitleText}"
                                                 Command="{x:Bind ListenCommand}"
                                                 CommandParameter="{x:Bind}" />

                                <HyperlinkButton x:Uid="lyricsTag"
                                                 Visibility="{x:Bind LyricsExists, Converter={StaticResource BoolToVisibilityConverter}}"
                                                 Style="{StaticResource gridTracksLyricsText}"
                                                 Command="{x:Bind LyricsOpenCommand}" />
                            </StackPanel>
                            
                            <HyperlinkButton Grid.Column="1"
                                             Style="{StaticResource gridTracksArtistText}"
                                             Command="{x:Bind ArtistOpenCommand}" />

                            <HyperlinkButton Grid.Column="2"
                                             Style="{StaticResource gridTracksAlbumText}"
                                             Command="{x:Bind AlbumOpenCommand}" />

                            <common:RatingControlLightControl Grid.Column="3"
                                                              Style="{StaticResource gridTracksScore}"
                                                              RatingValue="{x:Bind Score, Mode=TwoWay}" />
                        </Grid>
                    </DataTemplate>
                </ListView.ItemTemplate>
            </common:ListViewExtended>
        </Grid>
    </Grid>
</Page>
