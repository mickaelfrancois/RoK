<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="menuAlbums.Content" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="menuArtists.Content" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="artistsPageTitle.Text" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="albums" xml:space="preserve">
    <value>albums</value>
  </data>
  <data name="album" xml:space="preserve">
    <value>album</value>
  </data>
  <data name="track" xml:space="preserve">
    <value>track</value>
  </data>
  <data name="tracks" xml:space="preserve">
    <value>tracks</value>
  </data>
  <data name="artistsViewListen.Text" xml:space="preserve">
    <value> listen</value>
  </data>
  <data name="artistsViewGroupBy.Text" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="artistsViewGroupByYearMenu.Text" xml:space="preserve">
    <value>year</value>
  </data>
  <data name="artistsViewGroupByCountryMenu.Text" xml:space="preserve">
    <value>country</value>
  </data>
  <data name="artistsViewGroupByCreatDateMenu.Text" xml:space="preserve">
    <value>last added</value>
  </data>
  <data name="artistsViewGroupByArtistMenu.Text" xml:space="preserve">
    <value>artists</value>
  </data>
  <data name="artistsViewGroupByLastListenMenu.Text" xml:space="preserve">
    <value>last listen</value>
  </data>
  <data name="artistsViewGroupByListenCountMenu.Text" xml:space="preserve">
    <value>most listen</value>
  </data>
  <data name="artistsViewGroupByYear" xml:space="preserve">
    <value>year</value>
  </data>
  <data name="artistsViewGroupByCountry" xml:space="preserve">
    <value>country</value>
  </data>
  <data name="artistsViewGroupByCreatDate" xml:space="preserve">
    <value>last added</value>
  </data>
  <data name="artistsViewGroupByArtist" xml:space="preserve">
    <value>artists</value>
  </data>
  <data name="artistsViewGroupByLastListen" xml:space="preserve">
    <value>last listen</value>
  </data>
  <data name="artistsViewGroupByListenCount" xml:space="preserve">
    <value>most listen</value>
  </data>
  <data name="artistsViewFilterBy.Text" xml:space="preserve">
    <value>Filter by</value>
  </data>
  <data name="artistsViewFilterByAllMenu.Text" xml:space="preserve">
    <value>all</value>
  </data>
  <data name="artistsViewFilterByFavoriteArtistMenu.Text" xml:space="preserve">
    <value>favorites artists</value>
  </data>
  <data name="artistsViewFilterByFavoriteGenre" xml:space="preserve">
    <value>favorites genres</value>
  </data>
  <data name="artistsViewFilterByFavoriteGenreMenu.Text" xml:space="preserve">
    <value>favorites genres</value>
  </data>
  <data name="artistsViewFilterNone" xml:space="preserve">
    <value>all</value>
  </data>
  <data name="albumsPageTitle.Text" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="ArtistViewSong.Text" xml:space="preserve">
    <value>tracks, </value>
  </data>
  <data name="ArtistViewAlbums.Text" xml:space="preserve">
    <value>albums, </value>
  </data>
  <data name="ArtistViewBestof.Text" xml:space="preserve">
    <value>best of, </value>
  </data>
  <data name="ArtistViewLive.Text" xml:space="preserve">
    <value>live, </value>
  </data>
  <data name="ArtistViewCompilation.Text" xml:space="preserve">
    <value>compilations, </value>
  </data>
  <data name="ArtistViewDuration.Text" xml:space="preserve">
    <value>duration: </value>
  </data>
  <data name="artistViewListenCount.Text" xml:space="preserve">
    <value>Listened</value>
  </data>
  <data name="artistViewListenCountTimes.Text" xml:space="preserve">
    <value>time</value>
  </data>
  <data name="artistViewLastListen.Text" xml:space="preserve">
    <value>last listened on</value>
  </data>
  <data name="artistViewListen.Label" xml:space="preserve">
    <value>Listen</value>
  </data>
  <data name="artistViewLike.Label" xml:space="preserve">
    <value>Like</value>
  </data>
  <data name="artistWikipedia.Content" xml:space="preserve">
    <value>Wikipedia</value>
  </data>
  <data name="artistOfficialSite.Content" xml:space="preserve">
    <value>Official site</value>
  </data>
  <data name="artistViewGenre.Text" xml:space="preserve">
    <value>Genre:</value>
  </data>
  <data name="artistsViewGroupByDecadeMenu.Text" xml:space="preserve">
    <value>decade</value>
  </data>
  <data name="artistsViewGroupByDecade" xml:space="preserve">
    <value>decade</value>
  </data>
  <data name="artistsViewFilterByNeverListenedMenu.Text" xml:space="preserve">
    <value>never listened</value>
  </data>
  <data name="artistsViewFilterByNeverListened" xml:space="preserve">
    <value>never listened</value>
  </data>
  <data name="tracksViewGroupByTitle" xml:space="preserve">
    <value>titles</value>
  </data>
  <data name="tracksViewGroupByYear" xml:space="preserve">
    <value>year</value>
  </data>
  <data name="tracksViewGroupByCountry" xml:space="preserve">
    <value>country</value>
  </data>
  <data name="tracksViewGroupByCreatDate" xml:space="preserve">
    <value>last added</value>
  </data>
  <data name="tracksViewGroupByLastListen" xml:space="preserve">
    <value>last listen</value>
  </data>
  <data name="tracksViewGroupByListenCount" xml:space="preserve">
    <value>most listen</value>
  </data>
  <data name="tracksViewGroupBy.Text" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="tracksViewGroupByCountryMenu.Text" xml:space="preserve">
    <value>country</value>
  </data>
  <data name="tracksViewGroupByCreatDateMenu.Text" xml:space="preserve">
    <value>last added</value>
  </data>
  <data name="tracksViewGroupByLastListenMenu.Text" xml:space="preserve">
    <value>last listen</value>
  </data>
  <data name="tracksViewGroupByListenCountMenu.Text" xml:space="preserve">
    <value>most listen</value>
  </data>
  <data name="tracksViewGroupByTitleMenu.Text" xml:space="preserve">
    <value>titles</value>
  </data>
  <data name="tracksViewGroupByYearMenu.Text" xml:space="preserve">
    <value>year</value>
  </data>
  <data name="tracksViewListen.Text" xml:space="preserve">
    <value> listen</value>
  </data>
  <data name="tracksViewFilterByAllMenu.Text" xml:space="preserve">
    <value>all</value>
  </data>
  <data name="tracksViewFilterByFavoriteAlbumMenu.Text" xml:space="preserve">
    <value>favorites albums</value>
  </data>
  <data name="tracksViewFilterByFavoriteArtistMenu.Text" xml:space="preserve">
    <value>favorites artists</value>
  </data>
  <data name="tracksViewFilterByFavoriteGenreMenu.Text" xml:space="preserve">
    <value>favorites genres</value>
  </data>
  <data name="tracksViewFilterByFavoriteTrackMenu.Text" xml:space="preserve">
    <value>favorites tracks</value>
  </data>
  <data name="tracksViewFilterBy.Text" xml:space="preserve">
    <value>Filter by</value>
  </data>
  <data name="tracksViewFilterNone" xml:space="preserve">
    <value>all</value>
  </data>
  <data name="tracksViewFilterByAll" xml:space="preserve">
    <value>all</value>
  </data>
  <data name="tracksViewFilterByFavoriteAlbum" xml:space="preserve">
    <value>favorites albums</value>
  </data>
  <data name="tracksViewFilterByFavoriteArtist" xml:space="preserve">
    <value>favorites artists</value>
  </data>
  <data name="tracksViewFilterByFavoriteGenre" xml:space="preserve">
    <value>favorites genres</value>
  </data>
  <data name="tracksViewFilterByFavoriteTrack" xml:space="preserve">
    <value>favorites tracks</value>
  </data>
  <data name="albumsViewGroupByDecade" xml:space="preserve">
    <value>decade</value>
  </data>
  <data name="albumsViewGroupByDecadeMenu.Text" xml:space="preserve">
    <value>decade</value>
  </data>
  <data name="albumsViewFilterBy.Text" xml:space="preserve">
    <value>Filter by</value>
  </data>
  <data name="artistsViewFilterByFavoriteArtist" xml:space="preserve">
    <value>favorites artists</value>
  </data>
  <data name="albumsViewFilterByAllMenu.Text" xml:space="preserve">
    <value>all</value>
  </data>
  <data name="albumsViewFilterByFavoriteArtist" xml:space="preserve">
    <value>favorites artists</value>
  </data>
  <data name="albumsViewFilterByFavoriteArtistMenu.Text" xml:space="preserve">
    <value>favorites artists</value>
  </data>
  <data name="albumsViewFilterByFavoriteAlbum" xml:space="preserve">
    <value>favorites albums</value>
  </data>
  <data name="albumsViewFilterByFavoriteAlbumMenu.Text" xml:space="preserve">
    <value>favorites albums</value>
  </data>
  <data name="albumsViewFilterByFavoriteGenre" xml:space="preserve">
    <value>favorites genres</value>
  </data>
  <data name="albumsViewFilterByFavoriteGenreMenu.Text" xml:space="preserve">
    <value>favorites genres</value>
  </data>
  <data name="albumsViewFilterByNeverListened" xml:space="preserve">
    <value>never listened</value>
  </data>
  <data name="albumsViewFilterByNeverListenedMenu.Text" xml:space="preserve">
    <value>never listened</value>
  </data>
  <data name="albumsViewFilterNone" xml:space="preserve">
    <value>all</value>
  </data>
  <data name="albumsViewGroupBy.Text" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="albumsViewGroupByArtist" xml:space="preserve">
    <value>artists</value>
  </data>
  <data name="albumsViewGroupByArtistMenu.Text" xml:space="preserve">
    <value>artists</value>
  </data>
  <data name="albumsViewGroupByCountry" xml:space="preserve">
    <value>country</value>
  </data>
  <data name="albumsViewGroupByCountryMenu.Text" xml:space="preserve">
    <value>country</value>
  </data>
  <data name="albumsViewGroupByCreatDate" xml:space="preserve">
    <value>last added</value>
  </data>
  <data name="albumsViewGroupByCreatDateMenu.Text" xml:space="preserve">
    <value>last added</value>
  </data>
  <data name="albumsViewGroupByLastListen" xml:space="preserve">
    <value>last listen</value>
  </data>
  <data name="albumsViewGroupByLastListenMenu.Text" xml:space="preserve">
    <value>last listen</value>
  </data>
  <data name="albumsViewGroupByListenCount" xml:space="preserve">
    <value>most listen</value>
  </data>
  <data name="albumsViewGroupByListenCountMenu.Text" xml:space="preserve">
    <value>most listen</value>
  </data>
  <data name="albumsViewGroupByYear" xml:space="preserve">
    <value>year</value>
  </data>
  <data name="albumsViewGroupByYearMenu.Text" xml:space="preserve">
    <value>year</value>
  </data>
  <data name="albumsViewListen.Text" xml:space="preserve">
    <value> listen</value>
  </data>
  <data name="albumsViewGroupByAlbum" xml:space="preserve">
    <value>albums</value>
  </data>
  <data name="albumsViewGroupByAlbumMenu.Text" xml:space="preserve">
    <value>albums</value>
  </data>
  <data name="searchArtistHeader.Text" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="searchAlbumHeader.Text" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="searchTrackHeader.Text" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="searchViewTitle.Text" xml:space="preserve">
    <value>Search results</value>
  </data>
  <data name="menuPlaylists.Content" xml:space="preserve">
    <value>Playlists</value>
  </data>
  <data name="groupDefaultName" xml:space="preserve">
    <value>New group</value>
  </data>
  <data name="artists" xml:space="preserve">
    <value>artists</value>
  </data>
  <data name="artist" xml:space="preserve">
    <value>artist</value>
  </data>
  <data name="DeleteConfirmationTitle" xml:space="preserve">
    <value>Delete confirmation</value>
  </data>
  <data name="DeletePlaylistConfirmation" xml:space="preserve">
    <value>Do you want to delete this playlist?</value>
  </data>
  <data name="YesButton" xml:space="preserve">
    <value>Yes</value>
  </data>
  <data name="CancelButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="newPlaylist" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="defaultRadioPlaylistName" xml:space="preserve">
    <value>Radio</value>
  </data>
  <data name="defaultBestofPlaylistName" xml:space="preserve">
    <value>Best of</value>
  </data>
  <data name="defaultAlbumOfTheYearfPlaylistName" xml:space="preserve">
    <value>Albums of the year</value>
  </data>
  <data name="tracksViewListenListGroup.Text" xml:space="preserve">
    <value>listen</value>
  </data>
  <data name="artistsViewListenListGroup.Text" xml:space="preserve">
    <value>listen</value>
  </data>
  <data name="menuTracks.Content" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="searchBox.PlaceholderText" xml:space="preserve">
    <value>Search for songs, artists, albums</value>
  </data>
  <data name="playlistGroupEntityArtists" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="playlistGroupEntityAlbums" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="playlistGroupEntityTracks" xml:space="preserve">
    <value>Tracks</value>
  </data>
  <data name="playlistGroupEntityGenres" xml:space="preserve">
    <value>Genres</value>
  </data>
  <data name="playlistGroupEntityCountries" xml:space="preserve">
    <value>Countries</value>
  </data>
  <data name="playlistGroupFieldScore" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="playlistGroupFieldListenCount" xml:space="preserve">
    <value>Listen count</value>
  </data>
  <data name="playlistGroupFieldLive" xml:space="preserve">
    <value>Is live</value>
  </data>
  <data name="playlistGroupFieldAddDate" xml:space="preserve">
    <value>Date add</value>
  </data>
  <data name="playlistGroupFieldBitrate" xml:space="preserve">
    <value>Bitrate</value>
  </data>
  <data name="playlistGroupFieldLastListen" xml:space="preserve">
    <value>LastListen</value>
  </data>
  <data name="playlistGroupFieldSkipCount" xml:space="preserve">
    <value>Skip count</value>
  </data>
  <data name="playlistGroupFieldName" xml:space="preserve">
    <value>Name</value>
  </data>
  <data name="playlistGroupFieldFavorite" xml:space="preserve">
    <value>Favorite</value>
  </data>
  <data name="playlistGroupFieldAlbumCount" xml:space="preserve">
    <value>Album count</value>
  </data>
  <data name="playlistGroupFieldBestofCount" xml:space="preserve">
    <value>Best of count</value>
  </data>
  <data name="playlistGroupFieldCompilationCount" xml:space="preserve">
    <value>Compilation count</value>
  </data>
  <data name="playlistGroupFieldTrackCount" xml:space="preserve">
    <value>Track count</value>
  </data>
  <data name="playlistGroupFieldYear" xml:space="preserve">
    <value>Year</value>
  </data>
  <data name="playlistGroupFieldReleaseDate" xml:space="preserve">
    <value>Release date</value>
  </data>
  <data name="playlistGroupFieldArtistCount" xml:space="preserve">
    <value>Artist count</value>
  </data>
  <data name="playlistGroupOperatorEquals" xml:space="preserve">
    <value>Equals</value>
  </data>
  <data name="playlistGroupOperatorNotEquals" xml:space="preserve">
    <value>Not equals</value>
  </data>
  <data name="playlistGroupOperatorGreaterThan" xml:space="preserve">
    <value>Greater than</value>
  </data>
  <data name="playlistGroupOperatorLessThan" xml:space="preserve">
    <value>Less than</value>
  </data>
  <data name="playlistGroupOperatorContains" xml:space="preserve">
    <value>Contains</value>
  </data>
  <data name="playlistGroupOperatorNotContains" xml:space="preserve">
    <value>Not contains</value>
  </data>
  <data name="playlistGroupOperatorStartWith" xml:space="preserve">
    <value>Start with</value>
  </data>
  <data name="playlistGroupOperatorEndsWith" xml:space="preserve">
    <value>Ends with</value>
  </data>
  <data name="playlistGroupOperatorBetween" xml:space="preserve">
    <value>Between</value>
  </data>
  <data name="playlistGroupValueTrue" xml:space="preserve">
    <value>True</value>
  </data>
  <data name="playlistGroupValueFalse" xml:space="preserve">
    <value>False</value>
  </data>
  <data name="playlistGroupSortRandom" xml:space="preserve">
    <value>Random</value>
  </data>
  <data name="playlistGroupSortMostPlayed" xml:space="preserve">
    <value>Most played</value>
  </data>
  <data name="playlistGroupSortLeastPlayed" xml:space="preserve">
    <value>Least played</value>
  </data>
  <data name="playlistGroupSortMostRecent" xml:space="preserve">
    <value>Most recent</value>
  </data>
  <data name="playlistGroupSortLeastRecent" xml:space="preserve">
    <value>Least recent</value>
  </data>
  <data name="playlistGroupSortHighestRated" xml:space="preserve">
    <value>Highest rated</value>
  </data>
  <data name="playlistGroupSortLowestRated" xml:space="preserve">
    <value>Lowest rated</value>
  </data>
  <data name="playlistGroupSortOldest" xml:space="preserve">
    <value>Oldest</value>
  </data>
  <data name="playlistGroupSortNewest" xml:space="preserve">
    <value>Newest</value>
  </data>
  <data name="playlistGroupGroupName.Text" xml:space="preserve">
    <value>Group name</value>
  </data>
  <data name="playlistGroupMaximumSongs.Text" xml:space="preserve">
    <value>Maximum songs</value>
  </data>
  <data name="playlistGroupSortBy.Text" xml:space="preserve">
    <value>Sort by</value>
  </data>
  <data name="genSearchNoResult" xml:space="preserve">
    <value>No result</value>
  </data>
  <data name="gridHeaderTitle.Text" xml:space="preserve">
    <value>Title</value>
  </data>
  <data name="gridHeaderAlbum.Text" xml:space="preserve">
    <value>Album</value>
  </data>
  <data name="gridHeaderArtist.Text" xml:space="preserve">
    <value>Artist</value>
  </data>
  <data name="gridHeaderScore.Text" xml:space="preserve">
    <value>Score</value>
  </data>
  <data name="selectPicture.ToolTipService.ToolTip" xml:space="preserve">
    <value>Select a new picture</value>
  </data>
  <data name="lyricsTag.Content" xml:space="preserve">
    <value>lyrics</value>
  </data>
  <data name="artistViewBiography.Label" xml:space="preserve">
    <value>Biography</value>
  </data>
  <data name="artistViewEdit.Label" xml:space="preserve">
    <value>Edit</value>
  </data>
  <data name="artistViewPlaylist.Label" xml:space="preserve">
    <value>Playlist</value>
  </data>
  <data name="artistViewTabTracks.Header" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="artistViewTabAlbums.Header" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="artistViewOfficialSite.Content" xml:space="preserve">
    <value>Official site</value>
  </data>
  <data name="artistViewWikipedia.Content" xml:space="preserve">
    <value>Wikipedia</value>
  </data>
  <data name="bestOf" xml:space="preserve">
    <value>Best of</value>
  </data>
  <data name="live" xml:space="preserve">
    <value>Live</value>
  </data>
  <data name="compilation" xml:space="preserve">
    <value>Compilation</value>
  </data>
  <data name="duration" xml:space="preserve">
    <value>duration: </value>
  </data>
  <data name="listenCount" xml:space="preserve">
    <value>Listened</value>
  </data>
  <data name="listenCountTimes" xml:space="preserve">
    <value>times</value>
  </data>
  <data name="lastListen" xml:space="preserve">
    <value>last listen</value>
  </data>
  <data name="released" xml:space="preserve">
    <value>Released:</value>
  </data>
  <data name="albumViewListen.Label" xml:space="preserve">
    <value>Listen</value>
  </data>
  <data name="albumViewLike.Label" xml:space="preserve">
    <value>Like</value>
  </data>
  <data name="albumsViewFilterByLiveMenu.Text" xml:space="preserve">
    <value>lives</value>
  </data>
  <data name="albumsViewFilterByLive" xml:space="preserve">
    <value>lives</value>
  </data>
  <data name="albumsViewFilterByBestofMenu.Text" xml:space="preserve">
    <value>best of</value>
  </data>
  <data name="albumsViewFilterByBestof" xml:space="preserve">
    <value>best of</value>
  </data>
  <data name="albumsViewFilterByCompilationMenu.Text" xml:space="preserve">
    <value>compilations</value>
  </data>
  <data name="albumsViewFilterByCompilation" xml:space="preserve">
    <value>compilations</value>
  </data>
  <data name="albumsViewFilterByAlbumMenu.Text" xml:space="preserve">
    <value>albums</value>
  </data>
  <data name="albumsViewFilterByAlbum" xml:space="preserve">
    <value>albums</value>
  </data>
  <data name="artistViewWebSite.ToolTipService.ToolTip" xml:space="preserve">
    <value>Open official site</value>
  </data>
  <data name="hideBiography.Content" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="artistViewBiography.ToolTipService.ToolTip" xml:space="preserve">
    <value>Show biography</value>
  </data>
  <data name="tracksViewGroupByArtistMenu.Text" xml:space="preserve">
    <value>artists</value>
  </data>
  <data name="tracksViewGroupByAlbumMenu.Text" xml:space="preserve">
    <value>albums</value>
  </data>
  <data name="tracksViewGroupByGenreMenu.Text" xml:space="preserve">
    <value>genres</value>
  </data>
  <data name="tracksViewGroupByArtist" xml:space="preserve">
    <value>artists</value>
  </data>
  <data name="tracksViewGroupByAlbum" xml:space="preserve">
    <value>albums</value>
  </data>
  <data name="tracksViewGroupByGenre" xml:space="preserve">
    <value>genres</value>
  </data>
  <data name="Close" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="trackFlyoutArtist.Text" xml:space="preserve">
    <value>Show artist</value>
  </data>
  <data name="trackFlyoutAlbum.Text" xml:space="preserve">
    <value>Show album</value>
  </data>
  <data name="trackFlyoutLyrics.Text" xml:space="preserve">
    <value>Show lyrics</value>
  </data>
  <data name="trackFlyoutListen.Text" xml:space="preserve">
    <value>Listen</value>
  </data>
  <data name="toggleTheme.ToolTipService.ToolTip" xml:space="preserve">
    <value>Toggle theme</value>
  </data>
  <data name="libraryRefreshButton.ToolTipService.ToolTip" xml:space="preserve">
    <value>Refresh library</value>
  </data>
  <data name="optionsAppearanceTitle.Text" xml:space="preserve">
    <value>Appearance</value>
  </data>
  <data name="optionsThemeLabel.Text" xml:space="preserve">
    <value>Theme</value>
  </data>
  <data name="optionsThemeSystemItem.Content" xml:space="preserve">
    <value>System</value>
  </data>
  <data name="optionsThemeLightItem.Content" xml:space="preserve">
    <value>Light</value>
  </data>
  <data name="optionsThemeDarkItem.Content" xml:space="preserve">
    <value>Dark</value>
  </data>
  <data name="optionsLibraryTitle.Text" xml:space="preserve">
    <value>Library</value>
  </data>
  <data name="optionsRefreshAtStartupSwitch.Header" xml:space="preserve">
    <value>Refresh library at startup</value>
  </data>
  <data name="LibraryFoldersLabel.Text" xml:space="preserve">
    <value>Library folders</value>
  </data>
  <data name="AddLibraryFolderButton.Content" xml:space="preserve">
    <value>Add folder</value>
  </data>
  <data name="RemoveLibraryFolderButton.Content" xml:space="preserve">
    <value>Remove selected folder</value>
  </data>
  <data name="CachePathLabel.Text" xml:space="preserve">
    <value>Cache path</value>
  </data>
  <data name="BrowseCachePathButton.Content" xml:space="preserve">
    <value>Browse</value>
  </data>
  <data name="OptionsHideArtistsSwitch.Header" xml:space="preserve">
    <value>Hide artists without album</value>
  </data>
  <data name="OptionsImportWithArtistGenreSwitch.Header" xml:space="preserve">
    <value>Import tracks with artist genre</value>
  </data>
  <data name="trackFlyoutAddMoreFromArtist.Text" xml:space="preserve">
    <value>Add more songs from this artist</value>
  </data>
  <data name="welcomeWaiting.Text" xml:space="preserve">
    <value>Just a moment longer, we are preparing your data...</value>
  </data>
  <data name="startViewErrorMessage.Text" xml:space="preserve">
    <value>No albums could be found in your music folder.</value>
  </data>
  <data name="startViewAddFolder.Text" xml:space="preserve">
    <value>Select a folder</value>
  </data>
  <data name="noTitle" xml:space="preserve">
    <value>{no title}</value>
  </data>
  <data name="ListeningViewTitle.Text" xml:space="preserve">
    <value>Currently listening</value>
  </data>
  <data name="ListeningViewTitleCount.Text" xml:space="preserve">
    <value>songs, </value>
  </data>
  <data name="PlayerFullScreenLyricsToolTips.Text" xml:space="preserve">
    <value>Show lyrics</value>
  </data>
  <data name="PlayerFullScreenToolTips.Text" xml:space="preserve">
    <value>Exit fullscreen</value>
  </data>
  <data name="PlayerFullScreenCurrentListeningToolTips.Text" xml:space="preserve">
    <value>Show current playlist</value>
  </data>
  <data name="AlbumViewListenCount.Text" xml:space="preserve">
    <value>Listened to</value>
  </data>
  <data name="AlbumViewListenCountTimes.Text" xml:space="preserve">
    <value>times</value>
  </data>
  <data name="AlbumViewLastListen.Text" xml:space="preserve">
    <value>, last listen:</value>
  </data>
  <data name="playlistsAdd.Label" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="playlistsSmartAdd.Label" xml:space="preserve">
    <value>New smart playlist</value>
  </data>
  <data name="playlistListen.Label" xml:space="preserve">
    <value>Listen</value>
  </data>
  <data name="playlistDelete.Label" xml:space="preserve">
    <value>Delete</value>
  </data>
  <data name="MenuFlyout_AddTo_Text" xml:space="preserve">
    <value>Add to</value>
  </data>
  <data name="MenuFlyout_NewPlaylist_Text" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="NewPlaylistDialog_Title" xml:space="preserve">
    <value>New playlist</value>
  </data>
  <data name="NewPlaylistDialog_Description_Text" xml:space="preserve">
    <value>Enter the name of your new playlist:</value>
  </data>
  <data name="NewPlaylistDialog_TextBox_PlaceholderText" xml:space="preserve">
    <value>Playlist name</value>
  </data>
  <data name="NewPlaylistDialog_PrimaryButton" xml:space="preserve">
    <value>Create</value>
  </data>
  <data name="NewPlaylistDialog_CloseButton" xml:space="preserve">
    <value>Cancel</value>
  </data>
  <data name="notification_playlist_track_add" xml:space="preserve">
    <value>Song added to playlist</value>
  </data>
  <data name="notification_playlist_track_add_error" xml:space="preserve">
    <value>Can't add song to playlist</value>
  </data>
  <data name="notification_playlist_track_add_duplicate" xml:space="preserve">
    <value>The song is already in this playlist</value>
  </data>
  <data name="trackFlyoutRemoveFromPlaylist.Text" xml:space="preserve">
    <value>Remove</value>
  </data>
  <data name="commonClose.Content" xml:space="preserve">
    <value>Close</value>
  </data>
  <data name="playlistRefresh.Label" xml:space="preserve">
    <value>Refresh</value>
  </data>
  <data name="playlistSave.Text" xml:space="preserve">
    <value>Save</value>
  </data>
  <data name="playlistGroupNew.Text" xml:space="preserve">
    <value>New group</value>
  </data>
  <data name="playlistViewTabConfiguration.Header" xml:space="preserve">
    <value>Configuration</value>
  </data>
  <data name="playlistViewTabTracks.Header" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="filterByGenreMenu.Text" xml:space="preserve">
    <value>genres</value>
  </data>
  <data name="filterAllGenres.Text" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="filterall" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="filtergenre" xml:space="preserve">
    <value>Genres</value>
  </data>
  <data name="filtergenreall" xml:space="preserve">
    <value>All</value>
  </data>
  <data name="filteralbumfavorite" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="filterartistfavorite" xml:space="preserve">
    <value>Artists</value>
  </data>
  <data name="filtergenrefavorite" xml:space="preserve">
    <value>Genres</value>
  </data>
  <data name="filterlive" xml:space="preserve">
    <value>Lives</value>
  </data>
  <data name="filterbestof" xml:space="preserve">
    <value>Best of</value>
  </data>
  <data name="filtercompilation" xml:space="preserve">
    <value>Compilations</value>
  </data>
  <data name="filteralbum" xml:space="preserve">
    <value>Albums</value>
  </data>
  <data name="filterneverlistened" xml:space="preserve">
    <value>Never listened</value>
  </data>
  <data name="filterfavorite" xml:space="preserve">
    <value>Favorites</value>
  </data>
  <data name="filtertype" xml:space="preserve">
    <value>Types</value>
  </data>
  <data name="filtertrackfavorite" xml:space="preserve">
    <value>Songs</value>
  </data>
  <data name="tracksViewFilterByLive" xml:space="preserve">
    <value>Live</value>
  </data>
  <data name="tracksViewFilterByNeverListened" xml:space="preserve">
    <value>Never listened</value>
  </data>
  <data name="OptionsNovaApiTitle.Text" xml:space="preserve">
    <value>Services</value>
  </data>
  <data name="OptionsNovaApiEnabledSwitch.Header" xml:space="preserve">
    <value>Nova API</value>
  </data>
  <data name="OptionsTelemetryEnabledSwitch.Header" xml:space="preserve">
    <value>Telemetry</value>
  </data>
  <data name="OptionsCrossFadeSwitch.Header" xml:space="preserve">
    <value>Crossfade</value>
  </data>
</root>